{"version":3,"sources":["components/Header.js","components/Account.js","components/AccountList.js","components/Form.js","components/ContentButton.js","components/LoadingIcon.js","components/Post.js","components/PostList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Account","account","onDelete","class","text","toLowerCase","onClick","id","style","color","cursor","AccountList","accounts","map","Form","newAccount","accountExists","useState","setText","onSubmit","e","console","log","preventDefault","alert","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","value","type","onChange","target","ContentButton","setForm","setLoading","setPostVisible","setViralPosts","setAccounts","getJsonData","userName","a","fetch","response","json","responseJson","jsonNeeded","graphql","user","edge_owner_to_timeline_media","edges","postArray","sum","i","node","edge_media_preview_like","count","push","shortcode","display_url","edge_media_to_comment","taken_at_timestamp","filter","post","likes","j","length","Math","round","error","compare","b","viralScore","masterList","concat","sort","k","undefined","hasOwnProperty","prepData","LoadingIcon","size","Post","comments","alt","src","imgURL","rel","href","PostList","postList","App","showForm","showLoading","postVisible","viralPosts","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a059a7.chunk.js","sourcesContent":["\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h3 className=\"version\"><span className=\"versiontxt\">v1.0</span></h3>\r\n                <h1 className=\"title-page\"> IG Viral Content Finder</h1>\r\n            </header>\r\n            <head>\r\n                <title>\r\n                    IG Viral Bot\r\n                </title>\r\n            </head>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Account = ({account, onDelete}) => {\r\n    return (\r\n        <center>\r\n            <div class=\"accountDiv\">\r\n            <h2 class=\"account\">@{account.text.toLowerCase()}<FaTimes onClick={() => onDelete(account.id)} style={{color: \"#ff6961\", cursor: \"pointer\"}} /></h2>\r\n            </div>\r\n        </center>\r\n        \r\n    )\r\n}\r\n\r\nexport default Account\r\n","import Account from './Account'\r\n\r\nconst AccountList = ({accounts, onDelete}) => {\r\n    return (\r\n        <div>\r\n            {accounts.map((account) => <Account onDelete={onDelete} key= {account.id} account={account} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountList\r\n","import {useState} from 'react'\r\n\r\nconst Form = ({newAccount, accountExists}) => {\r\n    const [text, setText] = useState(\"\")\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        console.log({text})\r\n        e.preventDefault()\r\n        if (!text) {\r\n            alert('Please type a username')\r\n            return\r\n        }\r\n        if (accountExists({text})) {\r\n            alert(text.toLowerCase() + ' has already been added.');\r\n            setText(\"\")\r\n            return\r\n        }\r\n        newAccount({text})\r\n        setText(\"\")\r\n    }\r\n    return (\r\n        <div>\r\n            <form className=\"add-account\" onSubmit={onSubmit}>\r\n                <input autoComplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\" placeholder=\"type an account name\" className='add-account-sb' value={text} type=\"text\" onChange={(e) => setText(e.target.value)}></input>\r\n                <input className='add-account-submit' type=\"submit\" value=\"Add\"></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","\r\nconst ContentButton = ({accounts, setForm, setLoading, setPostVisible, setViralPosts, setAccounts}) => {\r\n\r\n    async function getJsonData(userName) {\r\n        try {\r\n          let response = await fetch('https://mycorsproxy-112.herokuapp.com/https://www.instagram.com/' + userName + '/channel/?__a=1');\r\n          let responseJson = await response.json();\r\n          var jsonNeeded = responseJson.graphql.user.edge_owner_to_timeline_media.edges;\r\n          var postArray = [];\r\n          var sum = 0;\r\n          for (var i = 0; i < 12; i++) {\r\n            sum += jsonNeeded[i].node.edge_media_preview_like.count;\r\n            postArray.push({\r\n                'id': \"www.instagram.com/p/\" + jsonNeeded[i].node.shortcode,\r\n                'likes': jsonNeeded[i].node.edge_media_preview_like.count,\r\n                'imgURL': jsonNeeded[i].node.display_url,\r\n                'comments': jsonNeeded[i].node.edge_media_to_comment.count,\r\n                'time': jsonNeeded[i].node.taken_at_timestamp,\r\n                'user': userName\r\n            })\r\n          }\r\n          sum /= 12;\r\n          postArray = postArray.filter((post) => (1 - (sum / post.likes)) > 0.5)\r\n          for (var j = 0; j < postArray.length; j++) {\r\n              postArray[j]['viralScore'] = Math.round((1 - (sum / postArray[j].likes)) * 100)\r\n          }\r\n          return postArray;\r\n         } catch(error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n\r\n\r\n    function compare(a, b) {\r\n        if (a.viralScore > b.viralScore) {\r\n            return -1;\r\n        }\r\n        if (a.viralScore < b.viralScore) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    async function prepData() {\r\n        setForm(false);\r\n        setLoading(true);\r\n        var masterList = [];\r\n        for (var i = 0; i < accounts.length; i++) {\r\n            let a = await getJsonData(accounts[i].text.toLowerCase());\r\n            masterList = masterList.concat(a);\r\n        }\r\n        masterList.sort(compare)\r\n        for (var k = 0; k < masterList.length; k++) {\r\n            try {\r\n                if (typeof masterList[k] === undefined || !masterList[k].hasOwnProperty('likes') || !masterList[k].hasOwnProperty('viralScore') || !masterList[k].hasOwnProperty('imgURL') || !masterList[k].hasOwnProperty('id')) {\r\n                    continue;\r\n                }\r\n            } catch {\r\n                setLoading(false);\r\n                alert(\"One of your accounts is either private or misspelled, please re-enter the usernames and try again.\");\r\n                setAccounts([]);\r\n                setForm(true);\r\n                return;\r\n            }\r\n        \r\n        }\r\n        setViralPosts(masterList);\r\n        setLoading(false);\r\n        setPostVisible(true); \r\n    }\r\n\r\n    return (\r\n        <div className=\"btnDiv\">\r\n            <button id={accounts.length > 0 ? 'analyze1':'analyze2'} onClick={() => prepData()}>\r\n                Find Content\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentButton","import {ClipLoader} from 'halogenium'\r\n\r\nconst LoadingIcon = () => {\r\n    return (\r\n        <div id=\"loadingDiv\" class=\"addMargin\">\r\n            <ClipLoader size='70px' color='#35B999'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingIcon","import { FaRegComment, FaHeart } from 'react-icons/fa'\r\n\r\n\r\nconst Post = ({post}) => {\r\n    // <h2 className=\"time\">{post.time}</h2>\r\n    return (\r\n\r\n        <center>\r\n            <div className=\"postDiv\">\r\n                <div className=\"textDiv\">\r\n                    <div className=\"col\">\r\n                    <h2 className=\"postScore rowElement\">{post.viralScore}%</h2>   \r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <h2 className=\"userName rowElement\">@{post.user}</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <h2 className=\"postLikes rowElement\"><FaHeart className=\"iconRow\"/>{post.likes}</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <h2 className=\"comments rowElement\"><FaRegComment className=\"iconRow\"/>{post.comments}</h2>\r\n                    </div>\r\n                </div>\r\n                <img className=\"postIMG\" alt={post.id} src={post.imgURL} />\r\n                <h2 className=\"postLink\"><a className=\"link\" target=\"_blank\" rel=\"noreferrer\" href={'https://' + post.id}>Instagram Link</a></h2>\r\n               \r\n            </div>\r\n        </center>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Post","import Post from './Post'\r\n\r\nconst PostList = ({postList}) => {\r\n    return (\r\n        <div>\r\n           {postList.map((post) => <Post post={post} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList","import Header from './components/Header'\nimport AccountList from './components/AccountList'\nimport Form from './components/Form.js'\nimport ContentButton from './components/ContentButton.js'\nimport {useState} from 'react'\nimport LoadingIcon from './components/LoadingIcon.js'\nimport PostList from './components/PostList.js'\n\n\nfunction App() {\n  const [accounts, setAccounts] = useState([])\n  const [showForm, setForm] = useState(true)\n  const [showLoading, setLoading] = useState(false)\n  const [postVisible, setPostVisible] = useState(false)\n  const [viralPosts, setViralPosts] = useState([])\n\n  // check if account is present\n  const accountExists = (account) => {\n    for (var i = 0; i < accounts.length; i++) {\n      if (account.text.toLowerCase() === accounts[i].text) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Add an account\n\n  const addAccount = (account) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    account.text = account.text.toLowerCase()\n    const newAccount = {id, ...account}\n    setAccounts([newAccount, ...accounts])\n  }\n\n  // delete an account\n\n  const deleteAccount = (id) => {\n    setAccounts(accounts.filter((account) => account.id !== id))\n  }\n  return (\n    <div className=\"mainDiv\">\n      <Header />\n      {showForm && <Form accountExists={accountExists} newAccount={addAccount}/>}\n      {(accounts.length > 0 && showForm) && <AccountList accounts={accounts} onDelete={deleteAccount}/>}\n      {showForm && <ContentButton setAccounts={setAccounts} accounts={accounts} setForm={setForm} setLoading={setLoading} setViralPosts={setViralPosts} setPostVisible={setPostVisible}/>}\n      {showLoading && <LoadingIcon />}\n      {postVisible && <PostList postList={viralPosts} />}\n    </div>\n\n\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}